@using Exam_Objective.Models
@using System.Collections.Generic

@{
    ViewBag.Title = "Addcontent";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h4>เพิ่มเนื้อหาบทเรียน</h4>

<!-- Basic Form -->
<div class="panel panel-grey margin-bottom-60">
    <div class="panel-heading">
        @{var SubjectsEntity = (List<SubjectsModel>)ViewBag.Subject;

            foreach (var rows in SubjectsEntity)
            {
                <h3><span class="fa  fa-tasks">หน่วยเรียน / วิชา</span>@rows.SubjectName</h3>
            }
        }
        @{var SubjectShareEntity = (List<SubjectsModel>)ViewBag.SubjectShare;

            foreach (var rows in SubjectShareEntity)
            {
                <h3><span class="fa  fa-tasks">หน่วยเรียน / วิชา</span>@rows.SubjectName</h3>
            }
        }
    </div>
    <div class="panel panel-default">
        <div class="panel-heading">
            เพิ่มหน่วยเรียนและวัตถุประสงค์
        </div>
        <div class="panel-body">
            @{
                var CateEntity = (List<LessonModel>)ViewBag.Lesson;
                var CateEnnotdis = (List<ObjectiveModel>)ViewBag.ObjectiveNotDis;
                foreach (var r in CateEntity)
                {
                    <div class="col-md-10">
                        <ul>
                            <li>
                                <b>
                                    @r.LesName
                                        <a>
                                            <span class="fa fa-plus-circle link-action btnEditC" data-toggle="modal" data-target="#AddcontentModal" data-lesson="@r.LessonID" data-lessonname="@r.LesName" title="เพิ่ม / แก้ไขเนื้อหา : หน่วยเรียนที่@r.LessonID"> เพิ่ม/แก้ไขเนื้อหา</span>
                                        </a>
                                        <a>
                                            <span class="fa fa-search link-action btnEditC" data-check="1" data-lesson="@r.LessonID" data-lessonname="@r.LesName" title="แสดงรายละเอียดเพิ่มเนื้อหา : หน่วยเรียนที่@r.LessonID"> ดูรายละเอียด</span>
                                        </a>
                                      </b>
                                <ul>
                                    @foreach (var r2 in CateEnnotdis)
                                    {
                                        if (r.LessonID == r2.PLessonID)
                                        {
                                            <li>
                                                @r2.ObjName
                                                
                                            </li>
                                        }
                                    }
                                </ul>
                            </li>
                        </ul>
                        <br />
                    </div>
                }
            }

        </div>
    </div>
</div>

 <!-- Modal addcontent -->
<form id="formContents">
    <div class="modal" id="AddcontentModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">เพิ่มเนื้อหา</h4>
                </div>
                <div class="modal-body" style="min-width:200px;" class="col-md-7">
                    <div>
                        <input type="hidden" class="form-control" id="isUpdateable" name="isUpdateable" value="1" />
                        <input type="hidden" class="form-control" id="LessonID" name="LessonID" value="0" />
                        <textarea type="text" id="Contents" name="Contents" class="form-control"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnSaveC" class="btn btn-primary btnSaveC"> บันทึก</button>
                    <button type="button" id="btnClose" class="btn btn-danger" data-dismiss="modal"> ยกเลิก</button>
                </div>
            </div>

        </div>
    </div>
</form>

 <!-- Modal -->
<form id="formContents">
    <div class="modal" id="AddcontentModal" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">เพิ่มเนื้อหา</h4>
                </div>
                <div class="modal-body" style="min-width:200px;" class="col-md-7">
                    <div>
                        <input type="hidden" class="form-control" id="isUpdateable" name="isUpdateable" value="1" />
                        <input type="hidden" class="form-control" id="LessonID" name="LessonID" value="0" />
                        <textarea type="text" id="Contents" name="Contents" class="form-control"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" id="btnSaveC" class="btn btn-primary btnSaveC"> บันทึก</button>
                    <button type="button" id="btnClose" class="btn btn-danger" data-dismiss="modal"> ยกเลิก</button>
                </div>
            </div>

        </div>
    </div>
</form>

@section scripts{
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.inputmask.bundle.js"></script>
<script src="~/Scripts/jquery.inputmask.bundle.min.js"></script>
<script src="~/Scripts/tinymce/jquery.tinymce.min.js"></script>
<script src="~/Scripts/tinymce/tinymce.min.js"></script> 
<script>

    var checkEdit = 0;

        $('#btnSaveC').click(function () {
            if ($("#formContents").valid()) {
                $.ajax({
                    type: "POST",
                    cache: false,
                    url: '@Url.Action("CreateLesson", "Contents")',
                    dataType: "json",
                    data: $('#formContents').serialize(),
                    traditional: true,
                    beforeSend: function(){

                    },

                    success: function (res){
                        var status = false;
                        var message = 'ดำเนินการไม่สำเร็จ';
                        if (res != null && res != undefined) {
                            status = res.status;
                            message = res.message != '' ? res.message : message;
                        }
                        if (status == false) {
                            swal("เกิดข้อผิดพลาด", message, "error");
                        } else {
                            swal({
                                title: "บันทึกสำเร็จ",
                                type: "success",
                                showConfirmButton: false,
                                timer: 1000,
                                closeOnConfirm: false
                            },
                                function () {
                                    location.reload(true);
                                });
                        }
                    },
                    error: function (xhr, ajaxOption, thrownError) {
                        swal("เกิดข้อผิดพลาด", message, "error");
                    },
                    complete: function () {

                    },
                });
            }
        });

     $('.btnEditC').click(function () {
            var id = $(this).data("lesson");
            var c = $(this).data("check");
            tinyMCE.activeEditor.setContent('');

            checkEdit = 1;
            //alert(id);
            $.ajax({
                type: "POST",
                cache: false,
                url: '@Url.Action("EditLesson", "Contents")',
                dataType: "json",
                data: { id: id },
                traditional: true,
                beforeSend: function () {
                },

                success: function (res) {
                    var status = false;
                    var message = 'ดำเนินการไม่สำเร็จ';
                    if (res != null && res != undefined) {
                        status = res.status;
                        message = res.message != '' ? res.message : message;
                    }
                    if (status == false) {
                        swal("เกิดข้อผิดพลาด", message, "error");
                    } else {
                        if (c == "1") {
                            $("#LessonID").val(res.data.LessonID);
                            $("#Contents").text(res.data.Contents);
                            var textContents = (res.data.Contents);
                            if (textContents == null) {
                                tinyMCE.activeEditor.setContent('');  //clear text in tinyeditor
                            } else {
                                tinyMCE.activeEditor.selection.setContent(textContents);    //Show text in tinyeditor
                            }
                            $("#AddcontentModal").modal("show");
                            $("#btnSaveC").hide();
                        } else {
                            $("#LessonID").val(res.data.LessonID);
                            $("#Contents").text(res.data.Contents);
                            var textContents = (res.data.Contents);
                            if (textContents == null) {
                                tinyMCE.activeEditor.setContent('');  //clear text in tinyeditor
                            } else {
                                tinyMCE.activeEditor.selection.setContent(textContents);    //Show text in tinyeditor
                            }
                            $("#AddcontentModal").modal("show");
                            $("#btnSaveC").show();
                        }
                    }
                },
                error: function (xhr, ajaxOptions, thrownError) {
                    swal("เกิดข้อผิดพลาด", message, "error");
                },
                complete: function () {

                },
            });
    });

    //editor
    tinymce.init({
        selector: '#Contents',
        setup: function (editor) {
            editor.on('change', function () {
                editor.save();
            });
        },
        height: 250,
        menubar: false,
        mode: "specific_textareas",
        editor_selector: "mceEditor",
        plugins: [
            'advlist autolink lists link image charmap print preview anchor',
            'searchreplace visualblocks code fullscreen',
            'insertdatetime media table contextmenu paste code'
        ],
        toolbar: 'undo redo | insert | styleselect | bold italic | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | link image',
        content_css: [
            '//fonts.googleapis.com/css?family=Lato:300,300i,400,400i',
            '//www.tinymce.com/css/codepen.min.css'],
        // enable title field in the Image dialog
        image_title: true,
        // enable automatic uploads of images represented by blob or data URIs
        automatic_uploads: true,
        // URL of our upload handler (for more details check: https://www.tinymce.com/docs/configure/file-image-upload/#images_upload_url)
        images_upload_url: 'postAcceptor.php',
        // here we add custom filepicker only to Image dialog
        file_picker_types: 'image',
        // and here's our custom image picker
        file_picker_callback: function (cb, value, meta) {
            var input = document.createElement('input');
            input.setAttribute('type', 'file');
            input.setAttribute('accept', 'image/*');

            // Note: In modern browsers input[type="file"] is functional without
            // even adding it to the DOM, but that might not be the case in some older
            // or quirky browsers like IE, so you might want to add it to the DOM
            // just in case, and visually hide it. And do not forget do remove it
            // once you do not need it anymore.

            input.onchange = function () {
                var file = this.files[0];

                var reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = function () {
                    // Note: Now we need to register the blob in TinyMCEs image blob
                    // registry. In the next release this part hopefully won't be
                    // necessary, as we are looking to handle it internally.
                    var id = 'blobid' + (new Date()).getTime();
                    var blobCache = tinymce.activeEditor.editorUpload.blobCache;
                    var base64 = reader.result.split(',')[1];
                    var blobInfo = blobCache.create(id, file, base64);
                    blobCache.add(blobInfo);

                    // call the callback and populate the Title field with the file name
                    cb(blobInfo.blobUri(), { title: file.name });
                };
            };
            input.click();
        }
    });  //end editor

</script>
<script src="~/Scripts/Scriptss/CreateTestJs.js"></script>
<script src="~/Scripts/Scriptss/ShowPW-HidePW-Js.js"></script>  
}